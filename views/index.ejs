<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="style.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>To do list</title>
</head>
<body>
  <h1> Dani's to do List <i>&#9997;&#127997;</i></h1>


  <form method = "post" action="/tasks">
  
  <input type="text" id="input" name = "tasks" placeholder="Tasks">
    
    <button type ="submit" class="btn"> Add to List </button>
  </form>
  
  <ul class="tasks" id="toDoList">
    <% for(var i=0; i<tasks.length; i++) { %>
      <% console.log(tasks[i])%>
      <% let crossed = tasks[i].crossed %> <!--what is this [] . notation syntax targeting?  is .crossed a property ? -->
      <li class="tasks" >
        <span data-crossed<%=crossed%>>
           <%=tasks[i].tasks%></span>
      </li>
    <% } %>
  </ul>
  <!-- //   !-- function strikeThrough(e){
  //     //e.target in this case is = li,that will be clicked  the element that is "clicked" aka connected to the event listener , see: *EVENT DELEGATION & e.target property* for more info.
  //      // if the li is clicked, toggle on and off the line-through styling and change the class accordingly 
  //     if (e.target.classList.contains('not-crossed')){
  //       // console.log('Hello I\'m working!') debugging/ testing if function is running 
  //      e.target.style.textDecoration="line-through"// change CSS syntax text-decoration to JS camelCase
  //      // every time an li is striked through, decrease the # of items you have left to do by 1
  //      //convert the inner text of the string of the #toDoCount element into an integer and decrease by one reassign = the new value to the same element id's inner text 
  //      toDoCount.innerText= parseInt(toDoCount.innerText) - 1 
  //      //reassing the target elements, in this case, the li's class name to "crossed"
  //       e.target.className = "crossed"
  //       //if the above condition is not true then, if the target element's class is already "crossed" and the event listener is activated then
  //     }else if( e.target.classList.contains("crossed")){
  //       //remove the text line-through decoration from the li's string
  //       e.target.style.textDecoration= "none"
  //       //reassign the className to "not-crossed", the function will run/ reiterate through the conditonal every time the click event is activated
  //       e.target.className = "not-crossed"
  //       // increase the # of items you have left to do by 1 if the e. target is re assigned the id of "not-crossed" 
  //       toDoCount.innerText= parseInt(toDoCount.innerText) + 1
      
  //   }
  //   } -->
  <!-- // !-- // 
// const input=document.querySelector('#input')
// const ul=document.querySelector('#toDoList')
     -->
    <!-- //function to dynamically create li's 
  //   function createAnLi(e){
  //     //prevent default refreshing behavior from the form and submit button
  //     e.preventDefault()

  //     //if input is empty stop running the function 
  //     if(input.value === '') return

  //     //dynamically create the li element in JS
  //     const li = document.createElement('li')

  //     //give newly created elements class names
  //     li.className = "not-crossed"

  //     //assign said elements its inner text to be the value inputed from the user 
  //     li.innerText = input.value

  //     //stick the li's in the ul to display in the DOM 
  //     ul.appendChild(li)

  //     // reset the input value back to empty once the button is clicked and the previous value is submitted
  //     input.value= ''

  //     //increase the value of the counter by 1 
  //     toDoCount.innerText = parseInt(toDoCount.innerText) + 1
    
  //   } 

   // -->


<!-- // default to value of 0 when the input is blank   -->
  <p> You have <span id="toDoCount"><%=tasks.length%></span> things to do!</p>
  <button id="clearAll" type="submit">Clear List</button>
  <button id="clearCompleted" type="submit">Clear Completed</button>
<script src="main.js"></script>
</body>
</html>